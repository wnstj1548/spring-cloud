server:
  port: 0

spring:
  application:
    name: order-service
  zipkin:
    base-url: http://localhost:9411
    enabled: true
  sleuth:
    sampler:
      probability: 1.0
  datasource:
    url: jdbc:postgresql://localhost:5432/orders
    username: postgres
    password: 1548
    driver-class-name: org.postgresql.Driver
  jpa:
    open-in-view: false
    show-sql: true
    defer-datasource-initialization: true
    database: postgresql
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
    properties:
      hibernate:
        format_sql: false
        use_sql_comments: false
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

management:
  endpoints:
    web:
      exposure:
        include: "*"
  tracing:
    sampling:
      probability: 1.0
    propagation:
      consume: b3
      produce: b3
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans

logging:
  level:
    com.example.orderservice: debug
  pattern:
    correlation: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
